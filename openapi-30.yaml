openapi: 3.0.0

info:
  title: PagerTree API YAML
  description: "This is the Swagger definition file for <a href=\"https://apidocs.pagertree.com\">https://apidocs.pagertree.com</a>. Use this file to generate SDKs."
  version: 1.0.0

externalDocs:
  description: API Documentation
  url: https://apidocs.pagertree.com

servers:
  - url: https://api.pagertree.com

security:
  - BearerAuth: []
  - APIKey: []

paths:
  /integration:
    post:
      summary: "Create an integration"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationBase'

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integration'
    get:
      summary: "List"
      parameters:
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/page"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationsArray'

  /integration/{id}:
    get:
      summary: "Get"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integration'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      summary: "Update"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integration'
    delete:
      summary: "Delete"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Success
        '404':
          description: Fail

components:
  securitySchemes:
    APIKey:
      type: apiKey
      description: API key to authorize request
      name: x-api-key
      in: header
    BearerAuth:
      type: http
      scheme: bearer

  parameters:
    limit:
      name: limit
      in: query
      description: "A limit on the number of objects to be returned, between 1 and 100"
      schema:
        type: "number"
    offset:
      name: offset
      in: query
      description: "A cursor to use in pagination. The number of elements to skip."
      schema:
        type: "number"
    page:
      name: page
      in: query
      description: "A cursor to use in pagination. Uses the limit to calculate current offset"
      schema:
        type: "number"

  responses:
    BadRequest:
      description: The request was unacceptable, often due to a missing required parameter.
    Unauthorized:
      description: A valid JWT token was not provided.
    Forbidden:
      description: You don't have access to the resource requested.
    NotFound:
      description: The specified resource does not exist.
    Conflict:
      description: The request conflicts with another request (perhaps using the same id or key).
    TooManyRequests:
      description: Too many request hit the API too quickly. We recommend an exponential backoff.
    InternalServerError:
      description: Something went wrong on PagerTree's servers. (These are rare).

  schemas:
    Base:
      type: "object"
      properties:
        sid: 
          type: "string"
        id: 
          type: "string"
        meta:
          type: "object"
          additionalProperties:
            type: "string"
        tinyId:
          type: "number"
        createdAt:
          type: "string"
          format: "date-time"
        updatedAt:
          type: "string"
          format: "date-time"

    AlertUrgency:
      type: "string"
      enum:
      - low
      - medium
      - high
      - critical
      default: medium

    IntegrationType:
      type: "string"
      enum:
      - amazonwebservices
      - apexping
      - appdynamics
      - cronitorio
      - datadog
      - deadmanssnitch
      - elastalert
      - email
      - freshdesk
      - freshservice
      - grafana
      - healthchecksio
      - hyperping
      - jiraserver
      - jotform
      - kapacitor
      - newrelic
      - outgoingwebhook
      - pingdom
      - prometheus
      - prtg
      - serverguard24
      - site24x7
      - slackoutgoingwebhook
      - solarwinds
      - stackdriver
      - statuscake
      - twilio_livecallrouting
      - typeform
      - uptime
      - uptimerobot
      - webhook
      - zendesk

    IntegrationBase:
      type: "object"
      properties:
        name:
          type: "string"
        type:
          $ref: '#/components/schemas/IntegrationType'
        urgency:
          $ref: '#/components/schemas/AlertUrgency'
        destination_ids:
          type: "array"
          items:
            type: string

    Integration:
      allOf:
        - $ref: '#/components/schemas/Base'
        - $ref: '#/components/schemas/IntegrationBase'
        - type: "object"
          properties:
            enabled:
              type: boolean   
            options:
              type: "object"
              additionalProperties:
                type: string

    
    IntegrationsArray:
      type: "array"
      items:
        $ref: '#/components/schemas/Integration'

    PaginatedIntegrations:
      type: "object"
      properties:
        data:
          type: "array"
          items:
            $ref: "#/components/schemas/Integration"
        has_more:
          type: "boolean"
        total_count:
          type: "number"
        