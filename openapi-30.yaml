openapi: 3.0.0

info:
  title: PagerTree API YAML
  description: "This is the Swagger definition file for <a href=\"https://apidocs.pagertree.com\">https://apidocs.pagertree.com</a>. Use this file to generate SDKs."
  version: 1.0.0

servers:
  - url: https://api.pagertree.com

security:
  - BearerAuth: []

paths:
  /integration:
    post:
      summary: "Create"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationBase'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integration'
    get:
      summary: "List"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationsArray'

  /integration/{id}:
    get:
      summary: "Get"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integration'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      summary: "Update"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integration'
    delete:
      summary: "Delete"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Success
        '404':
          description: Fail

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer

  responses:
    BadRequest:
      description: The request was unacceptable, often due to a missing required parameter.
    Unauthorized:
      description: A valid JWT token was not provided.
    Forbidden:
      description: You don't have access to the resource requested.
    NotFound:
      description: The specified resource does not exist.
    Conflict:
      description: The request conflicts with another request (perhaps using the same id or key).
    TooManyRequests:
      description: Too many request hit the API too quickly. We recommend an exponential backoff.
    InternalServerError:
      description: Something went wrong on PagerTree's servers. (These are rare).

  schemas:
    Base:
      type: "object"
      properties:
        sid:
          type: "string"
          pattern: '^acc_[a-zA-Z0-9-_]{7,14}$'
        createdAt:
          type: "string"
          format: "date-time"
        updatedAt:
          type: "string"
          format: "date-time"

    Account:
      allOf:
        - type: "object"
          properties:
            id:
              type: "string"
              pattern: '^acc_[a-zA-Z0-9-_]{7,14}$'
        - $ref: '#/components/schemas/Base'
        - type: "object"
          properties:
            active:
              type: "boolean"
            name:
              type: "string"
            token_id:
              type: "string"
            hippanotifications:
              type: "boolean"
            stripe_customer_id:
              type: "string"
            stripe_subscription:
              type: "object"
            stripe_customer:
              type: "object"

    IntegrationsArray:
      type: "array"
      items:
        $ref: '#/components/schemas/Integration'
    IntegrationBase:
      type: "object"
      properties:
        name:
          type: "string"
        type:
          type: "string"
          enum:
          - "amazonwebservices"
          - "apexping"
          - "appdynamics"
          - "cronitorio"
          - "datadog"
          - "deadmanssnitch"
          - "email"
          - "freshservice"
          - "grafana"
          - "healthchecksio"
          - "jiraserver"
          - "jotform"
          - "newrelic"
          - "outgoingwebhook"
          - "pingdom"
          - "prometheus"
          - "site24x7"
          - "slackoutgoingwebhook"
          - "solarwinds"
          - "statuscake"
          - "typeform"
          - "webhook"
          - "zendesk"
        d_team_id:
          type: "string"
          pattern: '^tem_[a-zA-Z0-9-_]{7,14}$'
        urgency:
          type: "string"
          enum:
          - "low"
          - "medium"
          - "high"
          - "critical"
        enabled:
          type: "boolean"
    Integration:
      allOf:
        - type: "object"
          properties:
            id:
              type: "string"
              pattern: '^int_[a-zA-Z0-9-_]{7,14}$'
        - $ref: '#/components/schemas/Base'
        - $ref: '#/components/schemas/IntegrationBase'
