openapi: 3.0.0

info:
  title: PagerTree API YAML
  description: 'This is the Swagger definition file for <a href="https://apidocs.pagertree.com">https://apidocs.pagertree.com</a>. Use this file to generate SDKs.'
  version: 1.0.0

externalDocs:
  description: API Documentation
  url: https://apidocs.pagertree.com

servers:
  - url: https://api.pagertree.com

security:
  - APIKey: []
    APISecret: []
  - JWT: []

paths:
  /account/{id}:
    parameters:
      - $ref: "#/components/parameters/id"
    get:
      summary: "Retrieve an Account"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "5XX":
          $ref: "#/components/responses/InternalServerError"
    put:
      summary: "Update an Account"
      responses:
        "200":
          description: Success - The resource was updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "5XX":
          $ref: "#/components/responses/InternalServerError"
    delete:
      summary: "Delete an Account - DANGER - This will delete all the resources under this account."
      responses:
        "204":
          $ref: "#/components/responses/Delete204"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/Delete404"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "5XX":
          $ref: "#/components/responses/InternalServerError"


  /integration:
    post:
      summary: "Create an Integration"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IntegrationBase"

      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Integration"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "5XX":
          $ref: "#/components/responses/InternalServerError"
    get:
      summary: "List all Integrations"
      parameters:
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedIntegrations"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "5XX":
          $ref: "#/components/responses/InternalServerError"

  /integration/{id}:
    parameters:
      - $ref: "#/components/parameters/id"
    get:
      summary: "Retrieve an Integration"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Integration"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "5XX":
          $ref: "#/components/responses/InternalServerError"
    put:
      summary: "Update an Integration"
      responses:
        "200":
          description: Success - The resource was updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Integration"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "5XX":
          $ref: "#/components/responses/InternalServerError"
    delete:
      summary: "Delete an Integration"
      responses:
        "204":
          $ref: "#/components/responses/Delete204"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/Delete404"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "5XX":
          $ref: "#/components/responses/InternalServerError"

components:
  securitySchemes:
    APIKey:
      type: apiKey
      description: API key to authorize request
      name: x-api-key
      in: header
    APISecret:
      type: apiKey
      description: API secrete to authorize request
      name: x-api-secret
      in: header
    JWT:
      type: http
      scheme: bearer

  parameters:
    id:
      name: id
      in: path
      required: true
      schema:
        type: string
    limit:
      name: limit
      in: query
      description: "A limit on the number of objects to be returned, between 1 and 100"
      schema:
        type: "number"
    offset:
      name: offset
      in: query
      description: "A cursor to use in pagination. The number of elements to skip."
      schema:
        type: "number"
    page:
      name: page
      in: query
      description: "A cursor to use in pagination. Uses the limit to calculate current offset"
      schema:
        type: "number"

  responses:
    BadRequest:
      description: Bad Request- The request was unacceptable, often due to a missing required parameter.
    Unauthorized:
      description: Unauthorized - A valid JWT token or API Key + Secret was not provided.
    Forbidden:
      description: Forbidden - You don't have access to the resource requested.
    NotFound:
      description: Not Found - The specified resource does not exist.
    Conflict:
      description: Conflict - The request conflicts with another request (perhaps using the same id or key).
    TooManyRequests:
      description: Too Many Requests - Too many request hit the API too quickly. We recommend an exponential backoff.
    InternalServerError:
      description: Internal Server Error - Something went wrong on PagerTree's servers. (These are rare).
    Delete204:
      description: Success - The resource was deleted successfully.
    Delete404:
      description: Failure - There was an error deleting the resource.

  schemas:
    Base:
      type: "object"
      properties:
        sid:
          type: "string"
          description: "Security identifier for the object."
        id:
          type: "string"
          description: "Unique identifier for the object."
        meta:
          type: "object"
          description: "Free form metadata."
          additionalProperties:
            type: "string"
        tinyId:
          type: "number"
        createdAt:
          type: "string"
          format: "date-time"
          description: "Timestamp when this object was first created."
        updatedAt:
          type: "string"
          format: "date-time"
          description: "Timestamp when this object was last updated."

    AlertUrgency:
      type: "string"
      description: "Options for alert urgency."
      enum:
        - low
        - medium
        - high
        - critical
      default: medium

    IntegrationType:
      type: "string"
      description: "Options for integration type."
      enum:
        - amazonwebservices
        - apexping
        - appdynamics
        - cronitorio
        - datadog
        - deadmanssnitch
        - elastalert
        - email
        - freshdesk
        - freshservice
        - grafana
        - healthchecksio
        - hyperping
        - jiraserver
        - jotform
        - kapacitor
        - newrelic
        - outgoingwebhook
        - pingdom
        - prometheus
        - prtg
        - serverguard24
        - site24x7
        - slackoutgoingwebhook
        - solarwinds
        - stackdriver
        - statuscake
        - twilio_livecallrouting
        - typeform
        - uptime
        - uptimerobot
        - webhook
        - zendesk

    NotificationTemplate:
      type: object
      properties:
        push:
          type: object
          properties:
            subject:
              type: string
              description: "The subject template to substitute. Goes to title of push notification."
            message:
              type: string
              description: "The message template to substitute. Goes to body of push notifcation."
        email:
          type: object
          properties:
            subject:
              type: string
              description: "The subject template to substitute. This is the email subject."
            message:
              type: string
              description: "The message template to substitute. This is the email body."
        sms:
          type: object
          properties:
            message:
              type: string
              description: "The message template to substitute. This is the SMS body."
        voice:
          type: object
          properties:
            message:
              type: string
              description: "The message template to substitute. The text that will be read to the user."
            acknowledge:
              type: number
              description: "The dial tone number that acknowledges the alert."
            reject:
              type: number
              description: "The dial tone number that rejects the alert."

    AccountBase:
      type: "object"
      properties:
        name:
          type: "string"
          description: "The name of the account."
        token_id: 
          type: "string"
          description: "The unique identifier of the token to use for invites to join the account."
        stripe:
          type: "object"
          description: "The Stripe customer / subscription"
          readOnly: true
          properties:
            customer:
              type: object
            subscription:
              type: object
        sso:
          type: object
          description: "Single Sign On settings"
          properties:
            enabled:
              type: boolean
            type:
              type: string
            saml_url:
              type: string
            issuer_url:
              type: string
            saml_x509:
              type: string
            tenant_id:
              type: string
        notification_templates:
          type: object
          description: "Notification templates for the different notification alert.subtype"
          properties:
            alert_acknowledged:
              $ref: '#/components/schemas/NotificationTemplate'
            alert_alert:
              $ref: '#/components/schemas/NotificationTemplate'
            alert_broadcast:
              $ref: '#/components/schemas/NotificationTemplate'
            alert_dropped:
              $ref: '#/components/schemas/NotificationTemplate'
            alert_handoff:
              $ref: '#/components/schemas/NotificationTemplate'
            alert_page:
              $ref: '#/components/schemas/NotificationTemplate'
            alert_rejected:
              $ref: '#/components/schemas/NotificationTemplate'
            alert_stakeholder:
              $ref: '#/components/schemas/NotificationTemplate'
            alert_timeout:
              $ref: '#/components/schemas/NotificationTemplate'
            event_goc:
              $ref: '#/components/schemas/NotificationTemplate'
    Account:
      allOf:
        - $ref: "#/components/schemas/Base"
        - $ref: "#/components/schemas/AccountBase"

    IntegrationBase:
      type: "object"
      properties:
        name:
          type: "string"
          description: "The name of the integration."
        type:
          $ref: "#/components/schemas/IntegrationType"
        urgency:
          $ref: "#/components/schemas/AlertUrgency"
        destination_ids:
          type: "array"
          description: "Where to route the alert to."
          items:
            type: string

    Integration:
      allOf:
        - $ref: "#/components/schemas/Base"
        - $ref: "#/components/schemas/IntegrationBase"
        - type: "object"
          properties:
            enabled:
              type: boolean
            options:
              type: "object"
              additionalProperties:
                type: string

    ArrayIntegration:
      type: "array"
      items:
        $ref: "#/components/schemas/Integration"

    PaginatedIntegrations:
      type: "object"
      properties:
        data:
          $ref: "#/components/schemas/ArrayIntegration"
        has_more:
          type: "boolean"
        total_count:
          type: "number"
